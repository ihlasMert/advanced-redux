{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      stat;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFormCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {} else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n        state.totalQuantity--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemCart","state","action","newItem","payload","existingItem","find","item","id","stat","push","itemId","price","quantity","totalPrice","title","removeItemFormCart","cartActions","actions"],"sources":["/Users/ihlasmert/Desktop/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    addItemCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      stat\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFormCart(state, action) {\n        const id = action.payload;\n        const existingItem = state.items.find(item=>item.id===id)\n        if(existingItem.quantity===1){\n\n        }else{\n            existingItem.quantity--;\n            existingItem.totalPrice=existingItem.totalPrice-existingItem.price\n            state.totalQuantity--;\n        }\n    },\n  },\n});\n\nexport const cartActions  = cartSlice.actions\n\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,KAAK,EAAE,EADK;IAEZC,aAAa,EAAE;EAFH,CAFc;EAM5BC,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;MACAC,IAAI;;MACJ,IAAI,CAACJ,YAAL,EAAmB;QACjBJ,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAiB;UACfC,MAAM,EAAER,OAAO,CAACK,EADD;UAEfI,KAAK,EAAET,OAAO,CAACS,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAEX,OAAO,CAACS,KAJL;UAKfjB,IAAI,EAAEQ,OAAO,CAACY;QALC,CAAjB;MAOD,CARD,MAQO;QACLV,YAAY,CAACQ,QAAb;QACAR,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACS,UAAb,GAA0BX,OAAO,CAACS,KAA5D;MACD;IACF,CAjBO;;IAkBRI,kBAAkB,CAACf,KAAD,EAAQC,MAAR,EAAgB;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAUA,EAAjC,CAArB;;MACA,IAAGH,YAAY,CAACQ,QAAb,KAAwB,CAA3B,EAA6B,CAE5B,CAFD,MAEK;QACDR,YAAY,CAACQ,QAAb;QACAR,YAAY,CAACS,UAAb,GAAwBT,YAAY,CAACS,UAAb,GAAwBT,YAAY,CAACO,KAA7D;QACAX,KAAK,CAACH,aAAN;MACH;IACJ;;EA5BO;AANkB,CAAD,CAA7B;AAsCA,OAAO,MAAMmB,WAAW,GAAIvB,SAAS,CAACwB,OAA/B;AAEP,eAAexB,SAAf"},"metadata":{},"sourceType":"module"}